# Trigger the pipeline on pushes to the main branch
trigger:
  - main

# Define the agent pool where the pipeline will run
# You can use 'ubuntu-latest', 'windows-latest', or 'macos-latest'
pool:
  vmImage: 'ubuntu-latest'

# Define variables for BrowserStack credentials.
# IMPORTANT: Store these securely in Azure DevOps as secret pipeline variables.
# Go to Pipelines -> Library -> Variable groups or edit your pipeline,
# click on "Variables" tab, and add them as secret variables.
variables:
  # Replace 'YourBrowserStackUsername' with the actual variable name you define in Azure DevOps
  BROWSERSTACK_USERNAME: $(BrowserStackUsername)
  # Replace 'YourBrowserStackAccessKey' with the actual variable name you define in Azure DevOps
  BROWSERSTACK_ACCESS_KEY: $(BrowserStackAccessKey)

# Steps to execute in the pipeline
steps:
- task: NodeTool@0
  inputs:
    versionSpec: '18.x' # Specify the Node.js version suitable for your project
  displayName: 'Install Node.js'

- script: |
    npm install
  displayName: 'Install Dependencies'

- script: |
    # Set BrowserStack credentials as environment variables for the SDK
    export BROWSERSTACK_USERNAME=$(BROWSERSTACK_USERNAME)
    export BROWSERSTACK_ACCESS_KEY=$(BROWSERSTACK_ACCESS_KEY)
    
    # Run Playwright tests using browserstack-node-sdk
    # Ensure your playwright.config.js is correctly configured for BrowserStack.
    # The SDK automatically intercepts Playwright's launch calls and routes them to BrowserStack.
    npx browserstack-node-sdk playwright test --config=./playwright.config.js
  displayName: 'Run Playwright Tests on BrowserStack'
  # Set failOnStderr to true if you want the step to fail when any error output is detected
  failOnStderr: true 
